user nginx;

worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 1024;

pid /run/nginx.pid;

error_log  /var/log/nginx/error.log warn;

events {

  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  multi_accept on;
  use epoll;
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
  worker_connections 1024; # increase if you have lots of clients
}

http {
  include mime.types;
  default_type application/octet-stream;
  charset utf-8;

  server_tokens off;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  sendfile on;
  tcp_nopush      on;
  tcp_nodelay     on;

  autoindex       off;
  autoindex_exact_size on;
  autoindex_localtime off;

  keepalive_timeout 300;
  server_names_hash_bucket_size 128;

  client_header_buffer_size 1k;
  large_client_header_buffers 4 64k;
  client_max_body_size 100m;
  client_header_timeout 5s;
  client_body_timeout 60s;
  send_timeout 60s;

  proxy_connect_timeout 3;
  proxy_read_timeout 60;
  proxy_send_timeout 60;
  proxy_buffering on;
  client_body_buffer_size 512k;
  proxy_buffers 4 64k;
  proxy_buffer_size 16k;
  proxy_busy_buffers_size 128k;
  proxy_temp_file_write_size 128k;
  proxy_temp_path /etc/nginx/temp_buffer;

  gzip on;
  gzip_types text/plain application/x-javascript text/css application/xml;
  gzip_comp_level 5;
  gzip_vary on;
  gzip_min_length 2k;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_disable "MSIE [1-6]\.";
  gzip_proxied off;


  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8001 fail_timeout=0;
  }


  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen       80;
    server_name .bookhub.com.cn;

    rewrite ^(.*)$ https://$host$1;
  }


  server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  .bookhub.com.cn;

    access_log  /var/log/nginx/bookhub.access.log  main;

    # 以下属性中，以ssl开头的属性表示与证书配置有关。
    ssl_certificate /etc/nginx/cert/www.bookhub.com.cn.pem;  # 需要将cert-file-name.pem替换成已上传的证书文件的名称。
    ssl_certificate_key /etc/nginx/cert/www.bookhub.com.cn.key;  # 需要将cert-file-name.key替换成已上传的证书私钥文件的名称。
    ssl_session_timeout 5m;  # 停止通信时，加密会话的有效期，在该时间段内不需要重新交换密钥
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  # 表示使用的加密套件的类型。
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; # 表示使用的TLS协议的类型。
    ssl_prefer_server_ciphers on;

    keepalive_requests 1000;

    # path for static files
    root /usr/share/nginx/file;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Nginx-Proxy true;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_buffering off;
      proxy_redirect off;

      proxy_pass http://app_server;
    }

  # error_page 500 502 503 504 /500.html;
  # location = /500.html {
  #   root /path/to/app/current/public;
  # }

  }

  server {
    listen 80 default_server;
    server_name _;

    return 444;
  }


  server {
    listen 443 default_server ssl;
    server_name _;

    ssl_certificate /etc/nginx/cert/www.bookhub.com.cn.pem;
    ssl_certificate_key /etc/nginx/cert/www.bookhub.com.cn.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    return 444;
  }

}